server:
  port: 7000            # 当前服务使用的端口
spring:
  application:
    name: api-gateway   # 当前springcloud微服务的名称，也是注册到nacos的名称
  zipkin:
    base-url: http://localhost:9411/    #zipkin server的请求地址
    discovery-client-enabled: false     #设置服务发现连接是否开启：否；让nacos把它当成一个URL，而不要当做服务名
  sleuth:
    sampler:
      probability: 1.0  #设置sleuth采样的百分比；1.0 = 100%
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848  #配置nacos地址，将gateway注册到nacos中
    gateway:
      discovery:
        locator:
          enabled: true   #设置gateway，允许从nacos中获取服务信息
      routes: # 路由数组[路由 就是指定当请求满足什么条件的时候转到哪个微服务]
        - id: product_route   # 当前路由的标识, ID要求唯一，默认是UUID
#          uri: http://localhost:8081  # 请求要转发的地址；最终转发路径是uri + predicates（断言）的path地址转发出去！
          uri: lb://service-product  # lb 指的是负载均衡，后面追加的是具体微服务注册再nacos中的名称
          order: 1    # 路由的优先级，数字越小级别越高
          predicates: # 断言（就是路由转发要满足的条件，返回值是boolean）
            - Path=/product-serv/**   # 当请求路径满足path指定的规则时，才会进入到当前的路由转发
          filters: # 过滤器，请求在传递过程中可以通过 过滤器 对其进行一定的修改
            - StripPrefix=1   # 转发之前去掉一层路径；将 uri + /product-serv/**/**   => 变成 uri + /**/**
            - Log=true,false  # 控制日志是否开启



gatewayremoveheaderconfig:
  productRoute:
    - x-Test-Header
    - x-Test1-Header
    - x-Test2-Header
  hello:
    - x-Test-Header